#!/usr/bin/env python
# encoding: utf-8
# Thomas Nagy, 2010

top = '.'
out = 'build'

def options(ctx):
	ctx.load('compiler_c compiler_cxx')
	ctx.load('python')
	ctx.load('cython')

def configure(ctx):
	ctx.load('compiler_c compiler_cxx')
	ctx.load('python')
	ctx.check_python_headers()
	ctx.load('cython')

def build(ctx):
	# first try to build a C-based cython extension
	ctx(
		features = 'c cshlib pyext',
		source   = 'src/cy_ctest.pyx c_lib/lib.c',
		target   = 'cy_ctest',
		includes = 'c_lib')

	# then a C++-based one
	ctx(
		features = 'cxx cxxshlib pyext',
		source   = 'src/cy_cxxtest.pyx cxx_lib/lib.cxx',
		target   = 'cy_cxxtest',
		includes = 'cxx_lib')


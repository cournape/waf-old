Waf 1.6.x
---------

KNOWN ISSUES

- multiple options when calling waf --help in demos/
- Task.TaskCmd in qt4.py
- python 2.3 fixes for msvc.py and fc.py: sort(key=fun)
- synchronized stdout+stderr for all commands by default
- copying a folder may result in errors (check the .lockfile)
- remove the warnings for the missing features dprogram and cxxstlib

GENERAL IMPROVEMENTS

- setup a build farm (we already have a working demos/wscript file)
- MAKEFLAGS?
- better apis for shell compilation in Task.py + consistency with Utils.subst_vars

LOW PRIORITY (contributions will be welcome)

+ IDE file generator (msvc, codeblocks)
+ CMake file interpreter
+ multiprocess for distributed compilation (vs threads?)
+ rewrite the boost detection (boost.py)

DOCUMENTATION

- to make a fully static app, replace env.SHLIB_MARKER and env.STLIB_MARKER
- string expansion on other attributes
- compile targets at the end
- set CC and LINK to a particular variable (the wine example)
- show a complete example of c compilation with rules vs task generator code (procedural vs object-oriented)

- store this somewhere
	get the path of a config test executable created
	from waflib.TaskGen import feature, after
	@feature('getpath')
	@after('apply_link')
	def getpath(self):
		self.bld.retval = self.link_task.outputs[0].abspath()
	ret = conf.check_cc(fragment="""#include<stdio.h>\nint main(){fprintf(stderr, "mu"); printf("%d", 22);return 0;}\n""", features='c cprogram getpath')
	print ret


